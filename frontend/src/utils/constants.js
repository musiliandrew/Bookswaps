export const API_ENDPOINTS = {
  // Existing endpoints from previous response
  LOGIN: '/users/login/',
  REGISTER: '/users/register/',
  TOKEN_REFRESH: '/users/token/refresh/',
  PROFILE: '/users/me/profile/',
  LOGOUT: '/users/logout/',
  PASSWORD_RESET: '/users/password/reset/',
  PASSWORD_RESET_CONFIRM: '/users/password/reset/confirm/',
  ACCOUNT_SETTINGS: '/users/me/settings/account/',
  CHAT_PREFERENCES: '/users/me/settings/preferences/',
  DELETE_ACCOUNT: '/users/me/delete/',
  SEND_MESSAGE: '/chat/messages/send/',
  EDIT_MESSAGE: (chatId) => `/chat/messages/${chatId}/edit/`,
  DELETE_MESSAGE: (chatId) => `/chat/messages/${chatId}/delete/`,
  MARK_READ: (chatId) => `/chat/messages/${chatId}/read/`,
  ADD_REACTION: (chatId) => `/chat/messages/${chatId}/react/`,
  LIST_REACTIONS: (chatId) => `/chat/messages/${chatId}/reactions/`,
  LIST_MESSAGES: '/chat/messages/',
  CREATE_DISCUSSION: '/discussions/posts/',
  LIST_POSTS: '/discussions/posts/list/',
  GET_POST: (discussionId) => `/discussions/posts/${discussionId}/`,
  DELETE_POST: (discussionId) => `/discussions/posts/${discussionId}/delete/`,
  ADD_NOTE: (discussionId) => `/discussions/posts/${discussionId}/notes/`,
  LIST_NOTES: (discussionId) => `/discussions/posts/${discussionId}/notes/list/`,
  LIKE_NOTE: (noteId) => `/discussions/notes/${noteId}/like/`,
  UPVOTE_POST: (discussionId) => `/discussions/posts/${discussionId}/upvote/`,
  DOWNVOTE_POST: (discussionId) => `/discussions/posts/${discussionId}/downvote/`,
  REPRINT_POST: (discussionId) => `/discussions/posts/${discussionId}/reprint/`,
  LIST_TOP_POSTS: '/discussions/top-posts/',
  GET_BOOK: (bookId) => `/library/books/${bookId}/`,
  LIST_BOOKS: '/library/books/',
  SEARCH_BOOKS: '/library/books/search/',
  ADD_BOOK: '/library/books/add/',
  USER_LIBRARY: '/library/library/',
  UPDATE_AVAILABILITY: (bookId) => `/library/books/${bookId}/availability/`,
  REMOVE_BOOK: (bookId) => `/library/books/${bookId}/remove/`,
  BOOKMARK_BOOK: (bookId) => `/library/books/${bookId}/bookmark/`,
  REMOVE_BOOKMARK: (bookId) => `/library/books/${bookId}/bookmark/remove/`,
  FAVORITE_BOOK: (bookId) => `/library/books/${bookId}/favorite/`,
  UNFAVORITE_BOOK: (bookId) => `/library/books/${bookId}/favorite/remove/`,
  GET_BOOKMARKS: '/library/bookmarks/',
  GET_FAVORITES: '/library/favorites/',
  GET_BOOK_HISTORY: '/library/history/',
  LIST_RECOMMENDED_BOOKS: '/library/recommended/',
  GET_NOTIFICATIONS: '/swaps/notifications/',
  MARK_NOTIFICATION_READ: (notificationId) => `/swaps/notifications/${notificationId}/read/`,
  MARK_ALL_NOTIFICATIONS_READ: '/swaps/notifications/mark-all-read/',
  DELETE_NOTIFICATION: (notificationId) => `/swaps/notifications/${notificationId}/`,
  BULK_NOTIFICATION_OPERATIONS: '/swaps/notifications/bulk/',
  CREATE_SOCIETY: '/chat/societies/create/',
  JOIN_SOCIETY: (societyId) => `/chat/societies/${societyId}/join/`,
  LEAVE_SOCIETY: (societyId) => `/chat/societies/${societyId}/leave/`,
  LIST_SOCIETIES: '/chat/societies/',
  GET_SOCIETY_MESSAGES: (societyId) => `/chat/societies/${societyId}/messages/`,
  EDIT_SOCIETY_MESSAGE: (societyId, messageId) => `/chat/societies/${societyId}/messages/${messageId}/edit/`,
  DELETE_SOCIETY_MESSAGE: (societyId, messageId) => `/chat/societies/${societyId}/messages/${messageId}/delete/`,
  PIN_SOCIETY_MESSAGE: (societyId, messageId) => `/chat/societies/${societyId}/messages/${messageId}/pin/`,
  ADD_SOCIETY_REACTION: (societyId, messageId) => `/chat/societies/${societyId}/messages/${messageId}/react/`,
  LIST_SOCIETY_REACTIONS: (societyId, messageId) => `/chat/societies/${societyId}/messages/${messageId}/reactions/`,
  CREATE_SOCIETY_EVENT: (societyId) => `/chat/societies/${societyId}/events/create/`,
  LIST_SOCIETY_EVENTS: (societyId) => `/chat/societies/${societyId}/events/`,
  // New endpoints for swaps
  INITIATE_SWAP: '/swaps/',
  LIST_SWAPS: '/swaps/list/',
  ACCEPT_SWAP: (swapId) => `/swaps/${swapId}/accept/`,
  CONFIRM_SWAP: (swapId) => `/swaps/${swapId}/confirm/`,
  CANCEL_SWAP: (swapId) => `/swaps/${swapId}/cancel/`,
  SWAP_HISTORY: '/swaps/history/',
  ADD_LOCATION: '/swaps/locations/add/',
  GET_MIDPOINT: '/swaps/midpoint/',
  SHARE_CONTENT: '/swaps/share/',
  GET_SWAP_QR: (swapId) => `/swaps/${swapId}/qr/`,
  // New endpoints for users
  GET_USER_PROFILE: (identifier) => `/users/profile/${identifier}/`,
  FOLLOW_USER: (userId) => `/users/follow/${userId}/`,
  UNFOLLOW_USER: (userId) => `/users/unfollow/${userId}/`,
  REMOVE_FOLLOWER: (userId) => `/users/remove-follower/${userId}/`,
  GET_FOLLOW_STATUS: (userId) => `/users/follow-status/${userId}/`,
  GET_FOLLOWERS: (userId) => `/users/followers/${userId}/`,
  GET_FOLLOWING: (userId) => `/users/following/${userId}/`,
  GET_RECOMMENDED_USERS: '/users/recommended/',
  SEARCH_USERS: '/users/search/',
  GET_USER_LIBRARY: (userId) => `/users/${userId}/library/`,
  GET_MY_STATS: '/users/me/stats/',
  GET_USER_STATS: (userId) => `/users/${userId}/stats/`,
};

// WebSocket endpoints
export const WS_ENDPOINTS = {
  NOTIFICATIONS: (token) => `/ws/notifications/?token=${token}`,
};